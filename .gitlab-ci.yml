# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#


stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
  - deploy_stage


cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: node:latest
  before_script:
    - echo "Compiling the code..."
  script:
    - bash .build_script.sh
  after_script:
    - echo "Compile complete."

  artifacts:
    paths:
    - myfirstproject.zip
  tags:
    - docker
  only:
    - develop

unit-test-job:   # This job runs in the test stage.
  stage: test
  image: node:latest    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 5 seconds."
    - sleep 1
    - npm test
    - echo "Code coverage is 90%"
  tags:
    - docker
  only:
    - develop

lint-test-job:   # This job also runs in the test stage.
  stage: test
  image: node:latest    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 5 seconds."
    - npm test
    - echo "No lint issues found."
  tags:
    - docker
  only:
    - develop

deploy-dev-job:      # This job runs in the deploy stage.
  stage: deploy
  variables:
    SERVER: "$DEV_SERVER"
  tags:
    - myrunner
  before_script:
      - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
      - mkdir -p ~/.ssh
      - eval `ssh-agent -s`
      - echo "$PRIVATE_SSH_KEY" | tr -d '\r' | ssh-add -
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
      - ssh-keyscan -t rsa $DEV_SERVER >> ~/.ssh/known_hosts
  script:
    - bash .deploy_script.sh
  after_script:
    - echo 'bug-101 branch test..'

  tags:
  - myrunner
  only:
    - develop

deploy-stage-job:      # This job runs in the deploy stage.
  stage: deploy_stage
  variables:
    SERVER: "$STAGE_SERVER"
  tags:
    - myrunner
  before_script:
      - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
      - mkdir -p ~/.ssh
      - eval `ssh-agent -s`
      - echo "$PRIVATE_SSH_KEY" | tr -d '\r' | ssh-add -
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
      - ssh-keyscan -t rsa $STAGE_SERVER >> ~/.ssh/known_hosts
  script:
    - bash .deploy_script.sh
  after_script:
    - echo 'bug-101 branch test..'

  tags:
  - myrunner
  only:
    - main
